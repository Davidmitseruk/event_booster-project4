{"mappings":"AAIA,IAAIA,EAAc,EACdC,EAAa,EACbC,EAAQ,GACRC,EAAiB,EAErB,MAAMC,EAAO,CACXC,eAAgBC,SAASC,eAAe,eACxCC,oBAAqBF,SAASC,eAAe,qBA0BzCE,EAAWC,WAAWC,QAxBL,6uBA0BvBC,eAAeC,EAAWC,GACxB,I,IAKUC,EAJR,MAAMC,QAAiBC,MAAM,+GAAkBH,EAAO,IACjDE,EAASE,IAAIC,QAAQC,MAAM,eAChC,MAAMC,QAAaL,EAASM,OAK5B,GAHApB,GAAsB,QAAda,EAAAM,EAAKE,iBAAS,IAAdR,OAAA,EAAAA,EAAgBS,SAAU,GAClCvB,EAAaoB,EAAKP,KAAKW,YAAc,GAEhCvB,EAAMwB,OAGT,OAFAtB,EAAKC,eAAesB,UAAY,gCACjBvB,EAAVI,oBAAoBmB,UAAY,KAY3C,WACE,MAAMC,EAAiB1B,EAAM2B,KAAIC,I,IAQvBf,EAAWgB,EACVC,EAAeC,EAAAC,EARxB,MAAMC,EAAcL,EAAMM,QAAU,GAC9BC,EACJF,EAAYG,MAAKC,GAAqB,SAAdA,EAAIC,OAAoBD,EAAIE,MAAQ,OAC5DN,EAAY,GAEd,MAAO,CACLO,KAAMZ,EAAMY,MAAQ,YACpBC,MAAiB,QAAX5B,EAAAe,EAAMc,aAAK,IAAX7B,GAAkB,QAAlBgB,EAAAhB,EAAa8B,aAAK,IAAAd,OAAlB,EAAkBA,EAAEe,YAAa,kBACvCC,OAAsB,QAAff,EAAAF,EAAMP,iBAAS,IAAfS,GAAuB,QAAvBC,EAAAD,EAAiBgB,cAAM,IAAAf,GAAK,QAA5BC,EAAAD,EAA0B,UAAE,IAAAC,OAA5B,EAAuBA,EAAOQ,OAAQ,mBAC7CL,MAAO,CACLY,IAAKZ,EAAQA,EAAMY,IAAM,KAE5B,IAGGC,EAAOzC,EAAS,CAAE0C,MAAOvB,IAC/BxB,EAAKC,eAAesB,UAAYuB,C,CA1B9BE,GA4BJ,WACEhD,EAAKI,oBAAoBmB,UAAY,GAErC,MAAM0B,EAAgB,EACtB,IAAIC,EAAYnD,EACZoD,EAAUC,KAAKC,IAAIH,EAAYD,EAAgB,EAAGpD,GAEtD,IAAK,IAAIyD,EAAIJ,EAAWI,GAAKH,EAASG,IAAK,CACzC,MAAMC,EAASrD,SAASsD,cAAc,UACtCD,EAAOE,YAAcH,EACjBA,IAAM1D,EACR2D,EAAOG,UAAUC,IAAI,oBAErBJ,EAAOG,UAAUE,OAAO,oBAG1BL,EAAOM,iBAAiB,SAAS,KAC/BjE,EAAc0D,EACd7C,EAAWb,GAEP0D,IAAMH,GAAWA,EAAUtD,EAC7BE,EAAiBqD,KAAKC,IACpBtD,EAAiBkD,EACjBpD,EAAaoD,EAAgB,GAEtBK,IAAMJ,GAAaA,EAAY,IACxCnD,EAAiBqD,KAAKU,IAAI,EAAGZ,EAAYD,GAAc,IAG3DjD,EAAKI,oBAAoB2D,YAAYR,E,CAGvC,GAAIJ,EAAUtD,EAAY,CACxB,MAAMmE,EAAO9D,SAASsD,cAAc,QACpCQ,EAAKN,UAAUC,IAAI,cACnBK,EAAKP,YAAc,MACnBzD,EAAKI,oBAAoB2D,YAAYC,GAErC,MAAMC,EAAa/D,SAASsD,cAAc,UAC1CS,EAAWR,YAAc5D,EACrBD,IAAgBC,EAChBoE,EAAWP,UAAUC,IAAI,oBAEzBM,EAAWP,UAAUE,OAAO,oBAEhCK,EAAWJ,iBAAiB,SAAS,KACjCjE,EAAcC,EACdE,EAAiBqD,KAAKU,IAAI,EAAGjE,EAAaoD,EAAgB,GAC1DxC,EAAWb,EAAY,IAE3BI,EAAKI,oBAAoB2D,YAAYE,E,EA7ErCC,E,CACA,MAAOlD,GACPD,QAAQC,MAAM,WAAmBA,GAC1BhB,EAAFC,eAAesB,UAAY,mC,EA+EpCd,EAAWb","sources":["src/js/pagination.js"],"sourcesContent":["const API_KEY = 'ketKoDmJUHl7Ak2zwntgxzeJRJUvRMXS';\nconst itemsPerPage = 20;\nconst apiUrl = `https://app.ticketmaster.com/discovery/v2/events.json?apikey=${API_KEY}&size=${itemsPerPage}`;\n\nlet currentPage = 1;\nlet totalPages = 1;\nlet items = [];\nlet pageGroupStart = 1;\n\nconst refs = {\n  itemsContainer: document.getElementById('hero__items'),\n  paginationContainer: document.getElementById('hero__pagination'),\n};\nconst templateSource = `\n  <div class='hero__template'>\n    <ul class='hero__list'>\n      {{#each items}}\n        <li class='hero__item'>\n          <div class='hero__img-wrap'>\n            <picture class='hero__img'>\n              <source srcset=\"{{image.url}} 1x, {{image.url}} 2x\" type=\"image/jpeg\" />\n              <img src=\"{{image.url}}\" alt=\"{{name}}\" />\n            </picture>\n          </div>\n          <h2 class='hero__name'>{{name}}</h2>\n          <p class='hero__date'>{{date}}</p>\n          <span class='hero__place'>\n            <svg class='hero__place-icon' width='7' height='10'>\n              <use href='#'></use>\n            </svg>\n            {{place}}\n          </span>\n        </li>\n      {{/each}}\n    </ul>\n  </div>\n`;\nconst template = Handlebars.compile(templateSource);\n\nasync function fetchItems(page) {\n  try {\n    const response = await fetch(`${apiUrl}&page=${page - 1}`);\n    if (!response.ok) console.error('Помилка API');\n    const data = await response.json();\n\n    items = data._embedded?.events || [];\n    totalPages = data.page.totalPages || 1;\n\n    if (!items.length) {\n      refs.itemsContainer.innerHTML = '<p>Події не знайдено</p>';\n      refs.paginationContainer.innerHTML = '';\n      return;\n    }\n\n    displayItems();\n    setupPagination();\n  } catch (error) {\n    console.error('Помилка:', error);\n    refs.itemsContainer.innerHTML = '<p>Помилка завантаження подій</p>';\n  }\n}\n\nfunction displayItems() {\n  const formattedItems = items.map(event => {\n    const eventImages = event.images || [];\n    const image =\n      eventImages.find(img => img.ratio === '16_9' && img.width > 300) ||\n      eventImages[0];\n\n    return {\n      name: event.name || 'Без назви',\n      date: event.dates?.start?.localDate || 'Дата не вказана',\n      place: event._embedded?.venues?.[0]?.name || 'Місце не вказане',\n      image: {\n        url: image ? image.url : '#'\n      },\n    };\n  });\n\n  const html = template({ items: formattedItems });\n  refs.itemsContainer.innerHTML = html;\n}\nfunction setupPagination() {\n  refs.paginationContainer.innerHTML = '';\n\n  const pagesPerGroup = 5;\n  let startPage = pageGroupStart;\n  let endPage = Math.min(startPage + pagesPerGroup - 1, totalPages);\n\n  for (let i = startPage; i <= endPage; i++) {\n    const button = document.createElement('button');\n    button.textContent = i;\n    if (i === currentPage) {\n      button.classList.add('hero__btn-active');\n    } else {\n      button.classList.remove('hero__btn-active');\n    }\n\n    button.addEventListener('click', () => {\n      currentPage = i;\n      fetchItems(currentPage);\n\n      if (i === endPage && endPage < totalPages) {\n        pageGroupStart = Math.min(\n          pageGroupStart + pagesPerGroup,\n          totalPages - pagesPerGroup + 1\n        );\n      } else if (i === startPage && startPage > 1) {\n        pageGroupStart = Math.max(1, startPage - pagesPerGroup);\n      }\n    });\n    refs.paginationContainer.appendChild(button);\n  }\n\n  if (endPage < totalPages) {\n    const dots = document.createElement('span');\n    dots.classList.add('hero__dots');\n    dots.textContent = '...';\n    refs.paginationContainer.appendChild(dots);\n\n    const lastButton = document.createElement('button');\n    lastButton.textContent = totalPages;\n    if (currentPage === totalPages) {\n        lastButton.classList.add('hero__btn-active');\n    } else {\n        lastButton.classList.remove('hero__btn-active'); \n    }\n    lastButton.addEventListener('click', () => {\n        currentPage = totalPages;\n        pageGroupStart = Math.max(1, totalPages - pagesPerGroup + 1);\n        fetchItems(currentPage);\n    });\n    refs.paginationContainer.appendChild(lastButton);\n  }\n}\n\n\nfetchItems(currentPage);\n"],"names":["$1bab9c519cfa82bc$var$currentPage","$1bab9c519cfa82bc$var$totalPages","$1bab9c519cfa82bc$var$items","$1bab9c519cfa82bc$var$pageGroupStart","$1bab9c519cfa82bc$var$refs","itemsContainer","document","getElementById","paginationContainer","$1bab9c519cfa82bc$var$template","Handlebars","compile","async","$1bab9c519cfa82bc$var$fetchItems","page","ref","response","fetch","ok","console","error","data","json","_embedded","events","totalPages","length","innerHTML","formattedItems","map","event","ref1","ref2","ref3","ref4","eventImages","images","image","find","img","ratio","width","name","date","dates","start","localDate","place","venues","url","html","items","$1bab9c519cfa82bc$var$displayItems","pagesPerGroup","startPage","endPage","Math","min","i","button","createElement","textContent","classList","add","remove","addEventListener","max","appendChild","dots","lastButton","$1bab9c519cfa82bc$var$setupPagination"],"version":3,"file":"index.76a8ab3e.js.map"}